# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/fbeae9f7-cb7b-459e-9ed7-5d254e2355b1";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."nixos-root".device = "/dev/disk/by-uuid/0d12f070-7fe1-45ac-bbb9-e1efdca6e54f";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/29E7-0445";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  boot.initrd.luks.devices."swap".device = "/dev/disk/by-uuid/c0aaad37-1dbe-47b9-b15b-69ae56c9e64c";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/fecf5427-ab8c-4530-932e-59a38353cd4e"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

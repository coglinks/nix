const e={allow_space:!0,allow_digits:!0,double_inline:!0,allow_labels:!0,labelNormalizer:e=>e.replace(/[\s]+/g,"-")};function t(t,l){const s=Object.assign(Object.assign({},e),l);t.inline.ruler.before("escape","math_inline",function(e){function t(t,r){if(36!==t.src.charCodeAt(t.pos))return!1;if(!e.allow_space&&t.md.utils.isWhiteSpace(t.src.charCodeAt(t.pos+1)))return!1;if(!e.allow_digits){const e=t.src.charAt(t.pos-1);if(e&&""!==e.trim()&&!isNaN(Number(e)))return!1}if(n(t,t.pos))return!1;let l=!1;e.double_inline&&36===t.src.charCodeAt(t.pos+1)&&(l=!0);let s=t.pos+1+(l?1:0),i=!1,o=-1;for(;!i;){if(o=t.src.indexOf("$",s),-1===o)return!1;n(t,o)?s=o+1:l&&36!==t.src.charCodeAt(o+1)?s=o+1:(l&&(o+=1),i=!0)}if(!i)return!1;if(!e.allow_space){const e=t.src.charCodeAt(o-1);if(t.md.utils.isWhiteSpace(e))return!1}if(!e.allow_digits){const e=t.src.charAt(o+1);if(e&&""!==e.trim()&&!isNaN(Number(e)))return!1}let c=t.src.slice(t.pos+1,o);if(l&&(c=t.src.slice(t.pos+2,o-1)),!c)return!1;if(!r){const e=t.push(l?"math_inline_double":"math_inline","math",0);e.content=c,e.markup=l?"$$":"$"}return t.pos=o+1,!0}return t}(s)),t.block.ruler.before("fence","math_block",function(e){function t(t,n,l,s){let i=!1;const o=t.bMarks[n]+t.tShift[n];let c=t.eMarks[n];if(t.sCount[n]-t.blkIndent>=4)return!1;if(o+2>c)return!1;if(36!=t.src.charCodeAt(o)||36!=t.src.charCodeAt(o+1))return!1;let a,u,h=n,f=t.src.slice(o,c);if(f.trim().length>3)if(f.trim().endsWith("$$"))i=!0,c=c-2-(f.length-f.trim().length);else if(e.allow_labels){const e=r(f,c);void 0!==e.label&&(i=!0,a=e.label,c=e.end)}if(!i)for(;h+1<l;)if(h+=1,u=t.bMarks[h]+t.tShift[h],c=t.eMarks[h],!(c-u<2)){if(f=t.src.slice(u,c),f.trim().endsWith("$$")){i=!0,c=c-2-(f.length-f.trim().length);break}if(e.allow_labels){const e=r(f,c);if(void 0!==e.label){i=!0,a=e.label,c=e.end;break}}}if(!i)return!1;t.line=h+(i?1:0);const d=t.push(a?"math_block_label":"math_block","math",0);return d.block=!0,d.content=t.src.slice(o+2,c),d.markup="$$",d.map=[n,t.line],a&&(d.info=e.labelNormalizer?e.labelNormalizer(a):a),!0}return t}(s));const i=null==s?void 0:s.renderer;i?(t.renderer.rules.math_inline=(e,n)=>{const r=e[n].content;let l;try{l=i(r,null==s?void 0:s.optionsInline)}catch(e){l=t.utils.escapeHtml(`${r}:${e.message}`)}return l},t.renderer.rules.math_inline_double=(e,n)=>{const r=e[n].content;let l;try{l=i(r,null==s?void 0:s.optionsBlock)}catch(e){l=t.utils.escapeHtml(`${r}:${e.message}`)}return l},t.renderer.rules.math_block=(e,n)=>{const r=e[n].content;let l;try{l=i(r,null==s?void 0:s.optionsBlock)}catch(e){l=t.utils.escapeHtml(`${r}:${e.message}`)}return l},t.renderer.rules.math_block_label=(e,n)=>{const r=e[n].content,l=e[n].info;let o;try{o=i(r,null==s?void 0:s.optionsBlock)}catch(e){o=t.utils.escapeHtml(`${r}:${e.message}`)}return o+`\n<a href="#${l}" class="mathlabel" title="Permalink to this equation">Â¶</a>\n`}):(t.renderer.rules.math_inline=(e,t)=>`<eq>${e[t].content}</eq>`,t.renderer.rules.math_inline_double=(e,t)=>`<eqn>${e[t].content}</eqn>`,t.renderer.rules.math_block=(e,t)=>`<section>\n<eqn>${e[t].content}</eqn>\n</section>\n`,t.renderer.rules.math_block_label=(e,t)=>`<section>\n<eqn>${e[t].content}</eqn>\n<span class="eqno">(${e[t].info})</span>\n</section>\n`)}function n(e,t,n=0){let r=0;for(;t>=0&&(t-=1,92===e.src.charCodeAt(t));)r+=1;return 0!==r&&r%2!==n}function r(e,t){const n=e.split("").reverse().join("").match(/^\s*\)(?<label>[^)$\r\n]+?)\(\s*\${2}/);if(n&&n.groups){return{label:n.groups.label.split("").reverse().join(""),end:t-=(n.index||0)+n[0].length}}return{end:t}}export default t;
//# sourceMappingURL=index.js.map
